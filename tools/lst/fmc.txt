; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\fmc.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\fmc.d --cpu=Cortex-M0 --apcs=interwork --diag_suppress=9931 -I..\lib\CMSIS\Include -I..\lib\Device\Nuvoton\NUC029xGE\Include -I..\lib\StdDriver\inc -I..\src\core\include -I..\src\driver\include -I..\src\io\include -I..\src\global -I..\src\server\include -I..\src\driver\audio -D__UVISION_VERSION=522 --omf_browse=.\obj\fmc.crf ..\lib\StdDriver\src\fmc.c]
                          THUMB

                          AREA ||i.FMC_Close||, CODE, READONLY, ALIGN=2

                  FMC_Close PROC
;;;58       */
;;;59     void FMC_Close(void)
000000  4802              LDR      r0,|L1.12|
;;;60     {
;;;61         FMC->ISPCTL &= ~FMC_ISPCTL_ISPEN_Msk;
000002  6801              LDR      r1,[r0,#0]
000004  0849              LSRS     r1,r1,#1
000006  0049              LSLS     r1,r1,#1
000008  6001              STR      r1,[r0,#0]
;;;62     }
00000a  4770              BX       lr
;;;63     
                          ENDP

                  |L1.12|
                          DCD      0x5000c000

                          AREA ||i.FMC_DisableAPUpdate||, CODE, READONLY, ALIGN=2

                  FMC_DisableAPUpdate PROC
;;;75       */
;;;76     void FMC_DisableAPUpdate(void)
000000  4802              LDR      r0,|L2.12|
;;;77     {
;;;78         FMC->ISPCTL &= ~FMC_ISPCTL_APUEN_Msk;
000002  6801              LDR      r1,[r0,#0]
000004  2208              MOVS     r2,#8
000006  4391              BICS     r1,r1,r2
000008  6001              STR      r1,[r0,#0]
;;;79     }
00000a  4770              BX       lr
;;;80     
                          ENDP

                  |L2.12|
                          DCD      0x5000c000

                          AREA ||i.FMC_DisableConfigUpdate||, CODE, READONLY, ALIGN=2

                  FMC_DisableConfigUpdate PROC
;;;91       */
;;;92     void FMC_DisableConfigUpdate(void)
000000  4802              LDR      r0,|L3.12|
;;;93     {
;;;94         FMC->ISPCTL &= ~FMC_ISPCTL_CFGUEN_Msk;
000002  6801              LDR      r1,[r0,#0]
000004  2210              MOVS     r2,#0x10
000006  4391              BICS     r1,r1,r2
000008  6001              STR      r1,[r0,#0]
;;;95     }
00000a  4770              BX       lr
;;;96     
                          ENDP

                  |L3.12|
                          DCD      0x5000c000

                          AREA ||i.FMC_DisableFreqOptimizeMode||, CODE, READONLY, ALIGN=2

                  FMC_DisableFreqOptimizeMode PROC
;;;302     */
;;;303    void FMC_DisableFreqOptimizeMode(void)
000000  4802              LDR      r0,|L4.12|
;;;304    {
;;;305        FMC->FTCTL &= ~FMC_FTCTL_FOM_Msk;
000002  6981              LDR      r1,[r0,#0x18]
000004  2270              MOVS     r2,#0x70
000006  4391              BICS     r1,r1,r2
000008  6181              STR      r1,[r0,#0x18]
;;;306    }
00000a  4770              BX       lr
;;;307    
                          ENDP

                  |L4.12|
                          DCD      0x5000c000

                          AREA ||i.FMC_DisableLDUpdate||, CODE, READONLY, ALIGN=2

                  FMC_DisableLDUpdate PROC
;;;107      */
;;;108    void FMC_DisableLDUpdate(void)
000000  4802              LDR      r0,|L5.12|
;;;109    {
;;;110        FMC->ISPCTL &= ~FMC_ISPCTL_LDUEN_Msk;
000002  6801              LDR      r1,[r0,#0]
000004  2220              MOVS     r2,#0x20
000006  4391              BICS     r1,r1,r2
000008  6001              STR      r1,[r0,#0]
;;;111    }
00000a  4770              BX       lr
;;;112    
                          ENDP

                  |L5.12|
                          DCD      0x5000c000

                          AREA ||i.FMC_EnableAPUpdate||, CODE, READONLY, ALIGN=2

                  FMC_EnableAPUpdate PROC
;;;123      */
;;;124    void FMC_EnableAPUpdate(void)
000000  4802              LDR      r0,|L6.12|
;;;125    {
;;;126        FMC->ISPCTL |= FMC_ISPCTL_APUEN_Msk;
000002  6801              LDR      r1,[r0,#0]
000004  2208              MOVS     r2,#8
000006  4311              ORRS     r1,r1,r2
000008  6001              STR      r1,[r0,#0]
;;;127    }
00000a  4770              BX       lr
;;;128    
                          ENDP

                  |L6.12|
                          DCD      0x5000c000

                          AREA ||i.FMC_EnableConfigUpdate||, CODE, READONLY, ALIGN=2

                  FMC_EnableConfigUpdate PROC
;;;139      */
;;;140    void FMC_EnableConfigUpdate(void)
000000  4802              LDR      r0,|L7.12|
;;;141    {
;;;142        FMC->ISPCTL |= FMC_ISPCTL_CFGUEN_Msk;
000002  6801              LDR      r1,[r0,#0]
000004  2210              MOVS     r2,#0x10
000006  4311              ORRS     r1,r1,r2
000008  6001              STR      r1,[r0,#0]
;;;143    }
00000a  4770              BX       lr
;;;144    
                          ENDP

                  |L7.12|
                          DCD      0x5000c000

                          AREA ||i.FMC_EnableFreqOptimizeMode||, CODE, READONLY, ALIGN=2

                  FMC_EnableFreqOptimizeMode PROC
;;;284     */
;;;285    void FMC_EnableFreqOptimizeMode(uint32_t u32Mode)
000000  4904              LDR      r1,|L8.20|
;;;286    {
;;;287        FMC->FTCTL &= ~FMC_FTCTL_FOM_Msk;
000002  698a              LDR      r2,[r1,#0x18]
000004  2370              MOVS     r3,#0x70
000006  439a              BICS     r2,r2,r3
000008  618a              STR      r2,[r1,#0x18]
;;;288        FMC->FTCTL |= (u32Mode << FMC_FTCTL_FOM_Pos);
00000a  698a              LDR      r2,[r1,#0x18]
00000c  0100              LSLS     r0,r0,#4
00000e  4302              ORRS     r2,r2,r0
000010  618a              STR      r2,[r1,#0x18]
;;;289    }
000012  4770              BX       lr
;;;290    
                          ENDP

                  |L8.20|
                          DCD      0x5000c000

                          AREA ||i.FMC_EnableLDUpdate||, CODE, READONLY, ALIGN=2

                  FMC_EnableLDUpdate PROC
;;;155      */
;;;156    void FMC_EnableLDUpdate(void)
000000  4802              LDR      r0,|L9.12|
;;;157    {
;;;158        FMC->ISPCTL |= FMC_ISPCTL_LDUEN_Msk;
000002  6801              LDR      r1,[r0,#0]
000004  2220              MOVS     r2,#0x20
000006  4311              ORRS     r1,r1,r2
000008  6001              STR      r1,[r0,#0]
;;;159    }
00000a  4770              BX       lr
;;;160    
                          ENDP

                  |L9.12|
                          DCD      0x5000c000

                          AREA ||i.FMC_GetBootSource||, CODE, READONLY, ALIGN=2

                  FMC_GetBootSource PROC
;;;172      */
;;;173    int32_t FMC_GetBootSource(void)
000000  4803              LDR      r0,|L10.16|
;;;174    {
;;;175        if(FMC->ISPCTL & FMC_ISPCTL_BS_Msk)
000002  6800              LDR      r0,[r0,#0]
000004  0780              LSLS     r0,r0,#30
000006  d501              BPL      |L10.12|
;;;176            return 1;
000008  2001              MOVS     r0,#1
;;;177        else
;;;178            return 0;
;;;179    }
00000a  4770              BX       lr
                  |L10.12|
00000c  2000              MOVS     r0,#0                 ;178
00000e  4770              BX       lr
;;;180    
                          ENDP

                  |L10.16|
                          DCD      0x5000c000

                          AREA ||i.FMC_Open||, CODE, READONLY, ALIGN=2

                  FMC_Open PROC
;;;194      */
;;;195    void FMC_Open(void)
000000  4802              LDR      r0,|L11.12|
;;;196    {
;;;197        FMC->ISPCTL |=  FMC_ISPCTL_ISPEN_Msk;
000002  6801              LDR      r1,[r0,#0]
000004  2201              MOVS     r2,#1
000006  4311              ORRS     r1,r1,r2
000008  6001              STR      r1,[r0,#0]
;;;198    }
00000a  4770              BX       lr
;;;199    
                          ENDP

                  |L11.12|
                          DCD      0x5000c000

                          AREA ||i.FMC_Read||, CODE, READONLY, ALIGN=2

                  FMC_Read PROC
;;;283     */
;;;284    static __INLINE uint32_t FMC_Read(uint32_t u32Addr)
000000  4905              LDR      r1,|L12.24|
;;;285    {
;;;286        FMC->ISPCMD = FMC_ISPCMD_READ;
000002  2200              MOVS     r2,#0
000004  60ca              STR      r2,[r1,#0xc]
;;;287        FMC->ISPADDR = u32Addr;
000006  6048              STR      r0,[r1,#4]
;;;288        FMC->ISPDAT = 0;
000008  608a              STR      r2,[r1,#8]
;;;289        FMC->ISPTRG = 0x1;
00000a  2001              MOVS     r0,#1
00000c  6108              STR      r0,[r1,#0x10]
                  |L12.14|
;;;290    #if ISBEN
;;;291        __ISB();
;;;292    #endif
;;;293        while(FMC->ISPTRG);
00000e  6908              LDR      r0,[r1,#0x10]
000010  2800              CMP      r0,#0
000012  d1fc              BNE      |L12.14|
;;;294    
;;;295        return FMC->ISPDAT;
000014  6888              LDR      r0,[r1,#8]
;;;296    }
000016  4770              BX       lr
;;;297    
                          ENDP

                  |L12.24|
                          DCD      0x5000c000

                          AREA ||i.FMC_ReadConfig||, CODE, READONLY, ALIGN=1

                  FMC_ReadConfig PROC
;;;228      */
;;;229    int32_t FMC_ReadConfig(uint32_t *u32Config, uint32_t u32Count)
000000  b5f8              PUSH     {r3-r7,lr}
;;;230    {
000002  460e              MOV      r6,r1
000004  4607              MOV      r7,r0
;;;231        int32_t i;
;;;232    
;;;233        for(i = 0; i < u32Count; i++)
000006  2400              MOVS     r4,#0
000008  e007              B        |L13.26|
                  |L13.10|
;;;234            u32Config[i] = FMC_Read(FMC_CONFIG_BASE + i * 4);
00000a  2003              MOVS     r0,#3
00000c  00a5              LSLS     r5,r4,#2
00000e  0500              LSLS     r0,r0,#20
000010  1828              ADDS     r0,r5,r0
000012  f7fffffe          BL       FMC_Read
000016  5178              STR      r0,[r7,r5]
000018  1c64              ADDS     r4,r4,#1
                  |L13.26|
00001a  42b4              CMP      r4,r6                 ;233
00001c  d3f5              BCC      |L13.10|
;;;235    
;;;236        return 0;
00001e  2000              MOVS     r0,#0
;;;237    }
000020  bdf8              POP      {r3-r7,pc}
;;;238    
                          ENDP


                          AREA ||i.FMC_ReadDataFlashBaseAddr||, CODE, READONLY, ALIGN=2

                  FMC_ReadDataFlashBaseAddr PROC
;;;209      */
;;;210    uint32_t FMC_ReadDataFlashBaseAddr(void)
000000  4801              LDR      r0,|L14.8|
;;;211    {
;;;212        return FMC->DFBA;
000002  6940              LDR      r0,[r0,#0x14]
;;;213    }
000004  4770              BX       lr
;;;214    
                          ENDP

000006  0000              DCW      0x0000
                  |L14.8|
                          DCD      0x5000c000

                          AREA ||i.FMC_SetBootSource||, CODE, READONLY, ALIGN=2

                  FMC_SetBootSource PROC
;;;39       */
;;;40     void FMC_SetBootSource(int32_t i32BootSrc)
000000  4904              LDR      r1,|L15.20|
;;;41     {
;;;42         if(i32BootSrc)
;;;43             FMC->ISPCTL |= FMC_ISPCTL_BS_Msk; /* Boot from LDROM */
000002  2202              MOVS     r2,#2
000004  2800              CMP      r0,#0                 ;42
;;;44         else
;;;45             FMC->ISPCTL &= ~FMC_ISPCTL_BS_Msk;/* Boot from APROM */
000006  6808              LDR      r0,[r1,#0]
000008  d001              BEQ      |L15.14|
00000a  4310              ORRS     r0,r0,r2              ;43
00000c  e000              B        |L15.16|
                  |L15.14|
00000e  4390              BICS     r0,r0,r2
                  |L15.16|
000010  6008              STR      r0,[r1,#0]            ;43
;;;46     }
000012  4770              BX       lr
;;;47     
                          ENDP

                  |L15.20|
                          DCD      0x5000c000

                          AREA ||i.FMC_WriteConfig||, CODE, READONLY, ALIGN=2

                  FMC_WriteConfig PROC
;;;253      */
;;;254    int32_t FMC_WriteConfig(uint32_t *u32Config, uint32_t u32Count)
000000  b5f3              PUSH     {r0,r1,r4-r7,lr}
;;;255    {
000002  b081              SUB      sp,sp,#4
000004  4607              MOV      r7,r0
;;;256        int32_t i;
;;;257    
;;;258        for(i = 0; i < u32Count; i++)
000006  2400              MOVS     r4,#0
000008  4d0e              LDR      r5,|L16.68|
00000a  e016              B        |L16.58|
                  |L16.12|
;;;259        {
;;;260            FMC_Write(FMC_CONFIG_BASE + i * 4, u32Config[i]);
00000c  00a6              LSLS     r6,r4,#2
00000e  2003              MOVS     r0,#3
000010  0500              LSLS     r0,r0,#20
000012  1830              ADDS     r0,r6,r0
000014  59b9              LDR      r1,[r7,r6]
000016  2221              MOVS     r2,#0x21
000018  60ea              STR      r2,[r5,#0xc]
00001a  6068              STR      r0,[r5,#4]
00001c  60a9              STR      r1,[r5,#8]
00001e  2101              MOVS     r1,#1
000020  6129              STR      r1,[r5,#0x10]
                  |L16.34|
000022  6929              LDR      r1,[r5,#0x10]
000024  2900              CMP      r1,#0
000026  d1fc              BNE      |L16.34|
;;;261            if(FMC_Read(FMC_CONFIG_BASE + i * 4) != u32Config[i])
000028  f7fffffe          BL       FMC_Read
00002c  59b9              LDR      r1,[r7,r6]
00002e  4288              CMP      r0,r1
000030  d002              BEQ      |L16.56|
;;;262                return -1;
000032  2000              MOVS     r0,#0
000034  43c0              MVNS     r0,r0
;;;263        }
;;;264    
;;;265        return 0;
;;;266    }
000036  bdfe              POP      {r1-r7,pc}
                  |L16.56|
000038  1c64              ADDS     r4,r4,#1
                  |L16.58|
00003a  9802              LDR      r0,[sp,#8]            ;258
00003c  4284              CMP      r4,r0                 ;258
00003e  d3e5              BCC      |L16.12|
000040  2000              MOVS     r0,#0                 ;265
000042  bdfe              POP      {r1-r7,pc}
;;;267    
                          ENDP

                  |L16.68|
                          DCD      0x5000c000

;*** Start embedded assembler ***

#line 1 "..\\lib\\StdDriver\\src\\fmc.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___5_fmc_c_15679c7a____REV16|
#line 388 "..\\lib\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___5_fmc_c_15679c7a____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___5_fmc_c_15679c7a____REVSH|
#line 402
|__asm___5_fmc_c_15679c7a____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
