; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\system_nuc029xge.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\system_nuc029xge.d --cpu=Cortex-M0 --apcs=interwork --diag_suppress=9931 -I..\lib\CMSIS\Include -I..\lib\Device\Nuvoton\NUC029xGE\Include -I..\lib\StdDriver\inc -I..\src\core\include -I..\src\driver\include -I..\src\io\include -I..\src\global -I..\src\server\include -I..\src\driver\audio -D__UVISION_VERSION=522 --omf_browse=.\obj\system_nuc029xge.crf ..\lib\Device\Nuvoton\NUC029xGE\Source\system_NUC029xGE.c]
                          THUMB

                          AREA ||i.SystemCoreClockUpdate||, CODE, READONLY, ALIGN=2

                  SystemCoreClockUpdate PROC
;;;36      */
;;;37     void SystemCoreClockUpdate(void)
000000  b5f8              PUSH     {r3-r7,lr}
;;;38     {
;;;39         uint32_t u32Freq, u32ClkSrc;
;;;40         uint32_t u32HclkDiv;
;;;41     
;;;42         u32ClkSrc = CLK->CLKSEL0 & CLK_CLKSEL0_HCLKSEL_Msk;
000002  4d1c              LDR      r5,|L1.116|
000004  6928              LDR      r0,[r5,#0x10]
000006  0744              LSLS     r4,r0,#29
000008  a01b              ADR      r0,|L1.120|
00000a  6800              LDR      r0,[r0,#0]
00000c  9000              STR      r0,[sp,#0]
00000e  6a29              LDR      r1,[r5,#0x20]
000010  0f64              LSRS     r4,r4,#29
000012  1328              ASRS     r0,r5,#12
000014  4201              TST      r1,r0
000016  d001              BEQ      |L1.28|
000018  2000              MOVS     r0,#0                 ;38
00001a  e016              B        |L1.74|
                  |L1.28|
00001c  0308              LSLS     r0,r1,#12             ;38
00001e  d501              BPL      |L1.36|
000020  4816              LDR      r0,|L1.124|
000022  e000              B        |L1.38|
                  |L1.36|
000024  4816              LDR      r0,|L1.128|
                  |L1.38|
000026  038a              LSLS     r2,r1,#14             ;38
000028  d40f              BMI      |L1.74|
00002a  040a              LSLS     r2,r1,#16             ;38
00002c  0f92              LSRS     r2,r2,#30             ;38
00002e  466b              MOV      r3,sp                 ;38
000030  5c9b              LDRB     r3,[r3,r2]            ;38
000032  05ca              LSLS     r2,r1,#23             ;38
000034  0489              LSLS     r1,r1,#18             ;38
000036  0dd2              LSRS     r2,r2,#23             ;38
000038  0ec9              LSRS     r1,r1,#27             ;38
00003a  1c89              ADDS     r1,r1,#2              ;38
00003c  0880              LSRS     r0,r0,#2              ;38
00003e  1c92              ADDS     r2,r2,#2              ;38
000040  4359              MULS     r1,r3,r1              ;38
000042  4350              MULS     r0,r2,r0              ;38
000044  f7fffffe          BL       __aeabi_uidivmod
000048  0080              LSLS     r0,r0,#2              ;38
                  |L1.74|
;;;43     
;;;44         /* Update PLL Clock */
;;;45         PllClock = CLK_GetPLLClockFreq();
00004a  4e0e              LDR      r6,|L1.132|
;;;46     
;;;47         if(u32ClkSrc != CLK_CLKSEL0_HCLKSEL_PLL)
00004c  2c02              CMP      r4,#2
00004e  60b0              STR      r0,[r6,#8]  ; PllClock
000050  d002              BEQ      |L1.88|
;;;48         {
;;;49             /* Use the clock sources directly */
;;;50             u32Freq = gau32ClkSrcTbl[u32ClkSrc];
000052  490d              LDR      r1,|L1.136|
000054  00a0              LSLS     r0,r4,#2
000056  5808              LDR      r0,[r1,r0]
                  |L1.88|
;;;51         }
;;;52         else
;;;53         {
;;;54             /* Use PLL clock */
;;;55             u32Freq = PllClock;
;;;56         }
;;;57     
;;;58         u32HclkDiv = (CLK->CLKDIV0 & CLK_CLKDIV0_HCLKDIV_Msk) + 1;
000058  69a9              LDR      r1,[r5,#0x18]
00005a  0709              LSLS     r1,r1,#28
00005c  0f09              LSRS     r1,r1,#28
00005e  1c49              ADDS     r1,r1,#1
;;;59     
;;;60         /* Update System Core Clock */
;;;61         SystemCoreClock = u32Freq / u32HclkDiv;
000060  f7fffffe          BL       __aeabi_uidivmod
;;;62     
;;;63         CyclesPerUs = (SystemCoreClock + 500000) / 1000000;
000064  4909              LDR      r1,|L1.140|
000066  6030              STR      r0,[r6,#0]  ; SystemCoreClock
000068  104a              ASRS     r2,r1,#1
00006a  1880              ADDS     r0,r0,r2
00006c  f7fffffe          BL       __aeabi_uidivmod
000070  6070              STR      r0,[r6,#4]  ; CyclesPerUs
;;;64     }
000072  bdf8              POP      {r3-r7,pc}
;;;65     
                          ENDP

                  |L1.116|
                          DCD      0x50000200
                  |L1.120|
000078  01020204          DCB      1,2,2,4
                  |L1.124|
                          DCD      0x01518000
                  |L1.128|
                          DCD      0x00b71b00
                  |L1.132|
                          DCD      ||.data||
                  |L1.136|
                          DCD      ||.constdata||
                  |L1.140|
                          DCD      0x000f4240

                          AREA ||i.SystemInit||, CODE, READONLY, ALIGN=1

                  SystemInit PROC
;;;75      */
;;;76     void SystemInit(void)
000000  4770              BX       lr
;;;77     {
;;;78     #ifdef INIT_SYSCLK_AT_BOOTING
;;;79         int32_t i32TimeoutCnt;
;;;80         uint32_t u32HclkSelect;
;;;81         int8_t i8IsPllEn;
;;;82     
;;;83         PllClock = 0;
;;;84         i8IsPllEn = 0;
;;;85         u32HclkSelect = CLK->CLKSEL0 & CLK_CLKSEL0_HCLKSEL_Msk;
;;;86         if(u32HclkSelect == CLK_CLKSEL0_HCLKSEL_HXT)
;;;87         {
;;;88             /* Set to 72MHz system clock frequency when clock source is from external 12MHz */
;;;89             CLK->PLLCTL = CLK_PLLCTL_72MHz_HXT;
;;;90     
;;;91             /* Waiting for PLL ready */
;;;92             i32TimeoutCnt = (__HXT / 1000); /* Timeout is about 1ms */
;;;93             while((CLK->STATUS & CLK_STATUS_PLLSTB_Msk) == 0)
;;;94             {
;;;95                 if(i32TimeoutCnt-- <= 0)
;;;96                     break;
;;;97             }
;;;98     
;;;99             i8IsPllEn = 1;
;;;100        }
;;;101        else if(u32HclkSelect == CLK_CLKSEL0_HCLKSEL_HIRC)
;;;102        {
;;;103            /* Set to 71.8848MHz system clock frequency when clock source is from internal 22.1184MHz RC clock */
;;;104            CLK->PLLCTL = CLK_PLLCTL_72MHz_HIRC;
;;;105    
;;;106            /* Waiting for PLL ready */
;;;107            i32TimeoutCnt = (__HIRC / 1000); /* Timeout is about 1ms */
;;;108            while((CLK->STATUS & CLK_STATUS_PLLSTB_Msk) == 0)
;;;109            {
;;;110                if(i32TimeoutCnt-- <= 0)
;;;111                    break;
;;;112            }
;;;113    
;;;114            i8IsPllEn = 1;
;;;115        }
;;;116    
;;;117        if(i8IsPllEn)
;;;118        {
;;;119            /* Set PLL as HCLK clock source (HCLK_S is locked setting)*/
;;;120            SYS_UnlockReg();
;;;121            CLK->CLKSEL0 = CLK_CLKSEL0_HCLKSEL_PLL;
;;;122            SYS_LockReg();
;;;123        }
;;;124    #endif
;;;125    }
;;;126    
                          ENDP


                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  gau32ClkSrcTbl
                          DCD      0x00b71b00
                          DCD      0x00008000
                          DCD      0x0448e000
                          DCD      0x00002710
                          DCD      0x02dc6c00
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x01518000

                          AREA ||.data||, DATA, ALIGN=2

                  SystemCoreClock
                          DCD      0x0448e000
                  CyclesPerUs
                          DCD      0x00000047
                  PllClock
                          DCD      0x0448e000

;*** Start embedded assembler ***

#line 1 "..\\lib\\Device\\Nuvoton\\NUC029xGE\\Source\\system_NUC029xGE.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___18_system_NUC029xGE_c_5d646a67____REV16|
#line 388 "..\\lib\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___18_system_NUC029xGE_c_5d646a67____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___18_system_NUC029xGE_c_5d646a67____REVSH|
#line 402
|__asm___18_system_NUC029xGE_c_5d646a67____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
