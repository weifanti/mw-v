; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o".\obj\drv_ gpio_key.o" --asm_dir=.\lst\ --list_dir=.\lst\ --depend=".\obj\drv_ gpio_key.d" --cpu=Cortex-M0 --apcs=interwork --diag_suppress=9931 -I..\lib\CMSIS\Include -I..\lib\Device\Nuvoton\NUC029xGE\Include -I..\lib\StdDriver\inc -I..\src\core\include -I..\src\driver\include -I..\src\io\include -I..\src\global -I..\src\server\include -I..\src\driver\audio -D__UVISION_VERSION=522 --omf_browse=".\obj\drv_ gpio_key.crf" "..\src\driver\drv_ gpio_key.c"]
                          THUMB

                          AREA ||i.drv_get_gpio_key_value||, CODE, READONLY, ALIGN=2

                  drv_get_gpio_key_value PROC
;;;289    
;;;290    uint8_t drv_get_gpio_key_value(void)
000000  4907              LDR      r1,|L1.32|
;;;291    {
;;;292    	uint8_t key_value = 0;
000002  2000              MOVS     r0,#0
;;;293    	switch(gpio_key_value)
000004  7989              LDRB     r1,[r1,#6]  ; gpio_key_value
000006  2901              CMP      r1,#1
000008  d005              BEQ      |L1.22|
00000a  2903              CMP      r1,#3
00000c  d005              BEQ      |L1.26|
00000e  2904              CMP      r1,#4
000010  d100              BNE      |L1.20|
;;;294    	{
;;;295    		case GPIO_KEY1_LONG:
;;;296    			key_value = GPIO_KEY_POWER;
;;;297    		break;
;;;298    		
;;;299    	    case GPIO_KEY1_SHORT:
;;;300    			key_value = GPIO_KEY_MODE;
;;;301    		break;
;;;302    		
;;;303    	    case GPIO_KEY2_SHORT:
;;;304    			key_value = GPIO_KEY_NET_SET;
000012  2003              MOVS     r0,#3
                  |L1.20|
;;;305    		break;
;;;306    		
;;;307    		default:
;;;308    			key_value = GPIO_KEY_NONE;
;;;309    		break;
;;;310    	}
;;;311    	return key_value;
;;;312    }
000014  4770              BX       lr
                  |L1.22|
000016  2001              MOVS     r0,#1                 ;296
000018  4770              BX       lr
                  |L1.26|
00001a  2002              MOVS     r0,#2                 ;300
00001c  4770              BX       lr
;;;313    
                          ENDP

00001e  0000              DCW      0x0000
                  |L1.32|
                          DCD      ||.data||

                          AREA ||i.drv_gipo_key_init||, CODE, READONLY, ALIGN=2

                  drv_gipo_key_init PROC
;;;313    
;;;314    void drv_gipo_key_init(void)
000000  b510              PUSH     {r4,lr}
;;;315    {
;;;316    
;;;317    	GPIO_SetMode(PC, BIT3,  GPIO_MODE_INPUT); //power on/off det
000002  4c06              LDR      r4,|L2.28|
000004  2200              MOVS     r2,#0
000006  2108              MOVS     r1,#8
000008  4620              MOV      r0,r4
00000a  f7fffffe          BL       GPIO_SetMode
;;;318    	GPIO_SetMode(PC, BIT6,  GPIO_MODE_INPUT); //power on/off det
00000e  2200              MOVS     r2,#0
000010  2140              MOVS     r1,#0x40
000012  4620              MOV      r0,r4
000014  f7fffffe          BL       GPIO_SetMode
;;;319    	
;;;320    }
000018  bd10              POP      {r4,pc}
;;;321    
                          ENDP

00001a  0000              DCW      0x0000
                  |L2.28|
                          DCD      0x50004080

                          AREA ||i.drv_gpio_key_handler||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_x
                          REQUIRE _printf_longlong_hex
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  drv_gpio_key_handler PROC
;;;199    */
;;;200    void drv_gpio_key_handler(void)
000000  b5f8              PUSH     {r3-r7,lr}
;;;201    {
;;;202    	
;;;203    	//key1
;;;204    	if(gpio_key_status.key_status==GPIO_KEY_POWER_UP)
000002  4f34              LDR      r7,|L3.212|
;;;205    	{	
;;;206    		gpio_key1_value_flag = 1;
000004  2601              MOVS     r6,#1
000006  7838              LDRB     r0,[r7,#0]            ;204  ; gpio_key_status
000008  4d33              LDR      r5,|L3.216|
00000a  28fe              CMP      r0,#0xfe              ;204
00000c  d104              BNE      |L3.24|
00000e  4631              MOV      r1,r6
000010  712e              STRB     r6,[r5,#4]
;;;207    		
;;;208    	printf("gpio_key1_value_flag = %x\n",gpio_key1_value_flag);
000012  a032              ADR      r0,|L3.220|
000014  f7fffffe          BL       __2printf
                  |L3.24|
;;;209    	}
;;;210    	if(gpio_key_status.key_status==GPIO_KEY_POWER_DOWN)
000018  7838              LDRB     r0,[r7,#0]  ; gpio_key_status
00001a  2400              MOVS     r4,#0
00001c  2801              CMP      r0,#1
00001e  d104              BNE      |L3.42|
;;;211    	{	
;;;212    		gpio_key1_value_flag = 0;
000020  4621              MOV      r1,r4
000022  712c              STRB     r4,[r5,#4]
;;;213    	printf("gpio_key1_value_flag = %x\n",gpio_key1_value_flag);
000024  a02d              ADR      r0,|L3.220|
000026  f7fffffe          BL       __2printf
                  |L3.42|
;;;214    	}
;;;215    	if(gpio_key1_value_flag)
00002a  7928              LDRB     r0,[r5,#4]  ; gpio_key1_value_flag
00002c  2800              CMP      r0,#0
;;;216    	{
;;;217    		gpio_key1_value_count++;
;;;218    		
;;;219    		printf("gpio_key1_value_count = %x\n",gpio_key1_value_count);
;;;220    		if(gpio_key1_value_count > 0xe0)
;;;221    		{
;;;222    			gpio_key1_value_flag = 0;
;;;223    			gpio_key1_value_count = 0;
;;;224    			gpio_key_value = GPIO_KEY1_LONG;
;;;225    			
;;;226    		printf("GPIO_KEY1_LONG = %d\n",gpio_key_value);
;;;227    		}
;;;228    	}
;;;229    	else
;;;230    	{
;;;231    		if(gpio_key1_value_count > 0x1)
00002e  78a8              LDRB     r0,[r5,#2]  ; gpio_key1_value_count
000030  d00e              BEQ      |L3.80|
000032  1c40              ADDS     r0,r0,#1              ;215
000034  b2c1              UXTB     r1,r0                 ;217
000036  70a9              STRB     r1,[r5,#2]            ;217
000038  a02f              ADR      r0,|L3.248|
00003a  f7fffffe          BL       __2printf
00003e  78a8              LDRB     r0,[r5,#2]            ;220  ; gpio_key1_value_count
000040  28e0              CMP      r0,#0xe0              ;220
000042  d90d              BLS      |L3.96|
000044  712c              STRB     r4,[r5,#4]            ;222
000046  70ac              STRB     r4,[r5,#2]            ;223
000048  4631              MOV      r1,r6                 ;224
00004a  71ae              STRB     r6,[r5,#6]            ;224
00004c  a031              ADR      r0,|L3.276|
00004e  e005              B        |L3.92|
                  |L3.80|
000050  2801              CMP      r0,#1
000052  d905              BLS      |L3.96|
;;;232    		{
;;;233    			gpio_key1_value_count = 0;
000054  70ac              STRB     r4,[r5,#2]
;;;234    			gpio_key_value =  GPIO_KEY1_SHORT;
000056  2103              MOVS     r1,#3
000058  71a9              STRB     r1,[r5,#6]
;;;235    		printf("GPIO_KEY1_SHORT = %d\n",gpio_key_value);
00005a  a034              ADR      r0,|L3.300|
                  |L3.92|
00005c  f7fffffe          BL       __2printf
                  |L3.96|
;;;236    		}
;;;237    	}
;;;238    	
;;;239    	if(gpio_key_value != GPIO_KEY_VALUE_NONE)
000060  79a9              LDRB     r1,[r5,#6]  ; gpio_key_value
000062  2900              CMP      r1,#0
000064  d002              BEQ      |L3.108|
;;;240    	{
;;;241    		printf("gpio_key_value = %d\n",gpio_key_value);
000066  a037              ADR      r0,|L3.324|
000068  f7fffffe          BL       __2printf
                  |L3.108|
;;;242    		//return gpio_key_value;
;;;243    	}
;;;244    	
;;;245    	//key2
;;;246    	if(gpio_key_status.key_status==GPIO_KEY_MODE_DOWN)
00006c  7838              LDRB     r0,[r7,#0]  ; gpio_key_status
00006e  2802              CMP      r0,#2
000070  d104              BNE      |L3.124|
;;;247    	{	
;;;248    		gpio_key2_value_flag = 1;
000072  4631              MOV      r1,r6
000074  716e              STRB     r6,[r5,#5]
;;;249    	printf("gpio_key2_value_flag = %x\n",gpio_key2_value_flag);
000076  a039              ADR      r0,|L3.348|
000078  f7fffffe          BL       __2printf
                  |L3.124|
;;;250    	}
;;;251    	if(gpio_key_status.key_status==GPIO_KEY_MODE_UP)
00007c  7838              LDRB     r0,[r7,#0]  ; gpio_key_status
00007e  28fd              CMP      r0,#0xfd
000080  d104              BNE      |L3.140|
;;;252    	{	
;;;253    		gpio_key2_value_flag = 0;
000082  4621              MOV      r1,r4
000084  716c              STRB     r4,[r5,#5]
;;;254    	printf("gpio_key2_value_flag = %x\n",gpio_key2_value_flag);
000086  a035              ADR      r0,|L3.348|
000088  f7fffffe          BL       __2printf
                  |L3.140|
;;;255    	}
;;;256    	if(gpio_key2_value_flag)
00008c  7968              LDRB     r0,[r5,#5]  ; gpio_key2_value_flag
00008e  2800              CMP      r0,#0
;;;257    	{
;;;258    		gpio_key2_value_count++;
;;;259    		printf("gpio_key1_value_count = %x\n",gpio_key1_value_count);
;;;260    		if(gpio_key2_value_count > 0xe0)
;;;261    		{
;;;262    			gpio_key2_value_flag = 0;
;;;263    			gpio_key2_value_count = 0;
;;;264    			gpio_key_value = GPIO_KEY2_LONG;
;;;265    			
;;;266    		printf("GPIO_KEY2_LONG = %d\n",gpio_key_value);
;;;267    		}
;;;268    	}
;;;269    	else
;;;270    	{
;;;271    		if(gpio_key2_value_count > 0x1)
000090  78e8              LDRB     r0,[r5,#3]  ; gpio_key2_value_count
000092  d00e              BEQ      |L3.178|
000094  1c40              ADDS     r0,r0,#1              ;256
000096  70e8              STRB     r0,[r5,#3]            ;258
000098  78a9              LDRB     r1,[r5,#2]            ;259  ; gpio_key1_value_count
00009a  a017              ADR      r0,|L3.248|
00009c  f7fffffe          BL       __2printf
0000a0  78e8              LDRB     r0,[r5,#3]            ;260  ; gpio_key2_value_count
0000a2  28e0              CMP      r0,#0xe0              ;260
0000a4  d90d              BLS      |L3.194|
0000a6  716c              STRB     r4,[r5,#5]            ;262
0000a8  70ec              STRB     r4,[r5,#3]            ;263
0000aa  2102              MOVS     r1,#2                 ;264
0000ac  71a9              STRB     r1,[r5,#6]            ;264
0000ae  a032              ADR      r0,|L3.376|
0000b0  e005              B        |L3.190|
                  |L3.178|
0000b2  2801              CMP      r0,#1
0000b4  d905              BLS      |L3.194|
;;;272    		{
;;;273    			gpio_key2_value_count = 0;
0000b6  70ec              STRB     r4,[r5,#3]
;;;274    			gpio_key_value =  GPIO_KEY2_SHORT;
0000b8  2104              MOVS     r1,#4
0000ba  71a9              STRB     r1,[r5,#6]
;;;275    		printf("GPIO_KEY2_SHORT = %d\n",gpio_key_value);
0000bc  a034              ADR      r0,|L3.400|
                  |L3.190|
0000be  f7fffffe          BL       __2printf
                  |L3.194|
;;;276    		}
;;;277    	}
;;;278    	
;;;279    
;;;280    	if(gpio_key_value != GPIO_KEY_VALUE_NONE)
0000c2  79a9              LDRB     r1,[r5,#6]  ; gpio_key_value
0000c4  2900              CMP      r1,#0
0000c6  d002              BEQ      |L3.206|
;;;281    	{
;;;282    		printf("gpio_key_value = %d\n",gpio_key_value);
0000c8  a01e              ADR      r0,|L3.324|
0000ca  f7fffffe          BL       __2printf
                  |L3.206|
;;;283    		//return gpio_key_value;
;;;284    	}
;;;285    	
;;;286    	gpio_key_value =  GPIO_KEY_VALUE_NONE;
0000ce  71ac              STRB     r4,[r5,#6]
;;;287    	//return gpio_key_value;
;;;288    }
0000d0  bdf8              POP      {r3-r7,pc}
;;;289    
                          ENDP

0000d2  0000              DCW      0x0000
                  |L3.212|
                          DCD      ||.bss||
                  |L3.216|
                          DCD      ||.data||
                  |L3.220|
0000dc  6770696f          DCB      "gpio_key1_value_flag = %x\n",0
0000e0  5f6b6579
0000e4  315f7661
0000e8  6c75655f
0000ec  666c6167
0000f0  203d2025
0000f4  780a00  
0000f7  00                DCB      0
                  |L3.248|
0000f8  6770696f          DCB      "gpio_key1_value_count = %x\n",0
0000fc  5f6b6579
000100  315f7661
000104  6c75655f
000108  636f756e
00010c  74203d20
000110  25780a00
                  |L3.276|
000114  4750494f          DCB      "GPIO_KEY1_LONG = %d\n",0
000118  5f4b4559
00011c  315f4c4f
000120  4e47203d
000124  2025640a
000128  00      
000129  00                DCB      0
00012a  00                DCB      0
00012b  00                DCB      0
                  |L3.300|
00012c  4750494f          DCB      "GPIO_KEY1_SHORT = %d\n",0
000130  5f4b4559
000134  315f5348
000138  4f525420
00013c  3d202564
000140  0a00    
000142  00                DCB      0
000143  00                DCB      0
                  |L3.324|
000144  6770696f          DCB      "gpio_key_value = %d\n",0
000148  5f6b6579
00014c  5f76616c
000150  7565203d
000154  2025640a
000158  00      
000159  00                DCB      0
00015a  00                DCB      0
00015b  00                DCB      0
                  |L3.348|
00015c  6770696f          DCB      "gpio_key2_value_flag = %x\n",0
000160  5f6b6579
000164  325f7661
000168  6c75655f
00016c  666c6167
000170  203d2025
000174  780a00  
000177  00                DCB      0
                  |L3.376|
000178  4750494f          DCB      "GPIO_KEY2_LONG = %d\n",0
00017c  5f4b4559
000180  325f4c4f
000184  4e47203d
000188  2025640a
00018c  00      
00018d  00                DCB      0
00018e  00                DCB      0
00018f  00                DCB      0
                  |L3.400|
000190  4750494f          DCB      "GPIO_KEY2_SHORT = %d\n",0
000194  5f4b4559
000198  325f5348
00019c  4f525420
0001a0  3d202564
0001a4  0a00    
0001a6  00                DCB      0
0001a7  00                DCB      0

                          AREA ||i.drv_gpio_key_status_change||, CODE, READONLY, ALIGN=2

                  drv_gpio_key_status_change PROC
;;;58     
;;;59     void drv_gpio_key_status_change(void)
000000  b5f8              PUSH     {r3-r7,lr}
;;;60     {
;;;61     	if((gpio_key_status.key_status_back & 0x01) == PC3)
000002  4c28              LDR      r4,|L4.164|
000004  4f28              LDR      r7,|L4.168|
000006  7a20              LDRB     r0,[r4,#8]  ; gpio_key_status
000008  68fa              LDR      r2,[r7,#0xc]
00000a  07c1              LSLS     r1,r0,#31
00000c  0fc9              LSRS     r1,r1,#31
;;;62     	{
;;;63     		//printf("gpio_key1_change_flag = %d\n",gpio_key1_change_flag);
;;;64     		if(gpio_key1_change_flag == 1)
00000e  4e27              LDR      r6,|L4.172|
000010  2500              MOVS     r5,#0
000012  4291              CMP      r1,r2                 ;61
000014  d116              BNE      |L4.68|
000016  7831              LDRB     r1,[r6,#0]  ; gpio_key1_change_flag
000018  2901              CMP      r1,#1
00001a  d10f              BNE      |L4.60|
;;;65     		{
;;;66     			if(gpio_key_status.key1_count > 20)
00001c  6861              LDR      r1,[r4,#4]  ; gpio_key_status
00001e  2914              CMP      r1,#0x14
000020  d90c              BLS      |L4.60|
;;;67     			{
;;;68     				gpio_key1_change_flag = 0;
000022  7035              STRB     r5,[r6,#0]
;;;69     				if(gpio_key_status.key_status_back & 0x01)
000024  07c0              LSLS     r0,r0,#31
000026  d004              BEQ      |L4.50|
;;;70     				{
;;;71     					printf("GPIO_KEY_POWER_UP\n");
000028  a021              ADR      r0,|L4.176|
00002a  f7fffffe          BL       __2printf
;;;72     					gpio_key_status.key_status=GPIO_KEY_POWER_UP;
00002e  20fe              MOVS     r0,#0xfe
000030  e003              B        |L4.58|
                  |L4.50|
;;;73     					//return GPIO_KEY_POWER_UP;
;;;74     				}
;;;75     				else
;;;76     				{
;;;77     					printf("GPIO_KEY_POWER_DOWN\n");
000032  a024              ADR      r0,|L4.196|
000034  f7fffffe          BL       __2printf
;;;78     					gpio_key_status.key_status=GPIO_KEY_POWER_DOWN;
000038  2001              MOVS     r0,#1
                  |L4.58|
00003a  7020              STRB     r0,[r4,#0]            ;72
                  |L4.60|
;;;79     					//return GPIO_KEY_POWER_DOWN;
;;;80     				}
;;;81     			}
;;;82     			
;;;83     		}
;;;84     		gpio_key_status.key1_count++;
00003c  6860              LDR      r0,[r4,#4]  ; gpio_key_status
00003e  1c40              ADDS     r0,r0,#1
000040  6060              STR      r0,[r4,#4]  ; gpio_key_status
000042  e006              B        |L4.82|
                  |L4.68|
;;;85     	}
;;;86     	else
;;;87     	{
;;;88     		gpio_key1_change_flag = 1;
000044  2101              MOVS     r1,#1
000046  7031              STRB     r1,[r6,#0]
;;;89     		gpio_key_status.key1_count = 0;
;;;90     		gpio_key_status.key_status_back = (gpio_key_status.key_status_back & 0xfe) | PC3;
000048  4388              BICS     r0,r0,r1
00004a  6065              STR      r5,[r4,#4]  ; gpio_key_status
00004c  68f9              LDR      r1,[r7,#0xc]
00004e  4308              ORRS     r0,r0,r1
000050  7220              STRB     r0,[r4,#8]
                  |L4.82|
;;;91     	}
;;;92     	if(((gpio_key_status.key_status_back >> 1) & 0x01) == PC6)
000052  7a20              LDRB     r0,[r4,#8]  ; gpio_key_status
000054  69ba              LDR      r2,[r7,#0x18]
000056  0781              LSLS     r1,r0,#30
000058  0fc9              LSRS     r1,r1,#31
00005a  4291              CMP      r1,r2
00005c  d116              BNE      |L4.140|
;;;93     	{	
;;;94     	
;;;95     		//printf("gpio_key2_change_flag = %d\n",gpio_key2_change_flag);
;;;96     		if(gpio_key2_change_flag)
00005e  7871              LDRB     r1,[r6,#1]  ; gpio_key2_change_flag
000060  2900              CMP      r1,#0
000062  d00f              BEQ      |L4.132|
;;;97     		{
;;;98     			if(gpio_key_status.key2_count >0x10)
000064  68e1              LDR      r1,[r4,#0xc]  ; gpio_key_status
000066  2910              CMP      r1,#0x10
000068  d90c              BLS      |L4.132|
;;;99     			{
;;;100    				gpio_key2_change_flag = 0;
00006a  7075              STRB     r5,[r6,#1]
;;;101    				if(gpio_key_status.key_status_back & 0x02)
00006c  0780              LSLS     r0,r0,#30
00006e  d504              BPL      |L4.122|
;;;102    				{
;;;103    					printf("GPIO_KEY_MODE_UP\n");
000070  a01a              ADR      r0,|L4.220|
000072  f7fffffe          BL       __2printf
;;;104    					gpio_key_status.key_status=GPIO_KEY_MODE_UP;
000076  20fd              MOVS     r0,#0xfd
000078  e003              B        |L4.130|
                  |L4.122|
;;;105    					//return GPIO_KEY_MODE_UP;
;;;106    				}
;;;107    				else
;;;108    				{
;;;109    					printf("GPIO_KEY_MODE_DOWN\n");
00007a  a01d              ADR      r0,|L4.240|
00007c  f7fffffe          BL       __2printf
;;;110    					gpio_key_status.key_status=GPIO_KEY_MODE_DOWN;
000080  2002              MOVS     r0,#2
                  |L4.130|
000082  7020              STRB     r0,[r4,#0]            ;104
                  |L4.132|
;;;111    					//return GPIO_KEY_MODE_DOWN;
;;;112    				}
;;;113    			}
;;;114    		}
;;;115    		
;;;116    		gpio_key_status.key2_count++;
000084  68e0              LDR      r0,[r4,#0xc]  ; gpio_key_status
000086  1c40              ADDS     r0,r0,#1
000088  60e0              STR      r0,[r4,#0xc]  ; gpio_key_status
00008a  e008              B        |L4.158|
                  |L4.140|
;;;117    	}
;;;118    	else
;;;119    	{
;;;120    		gpio_key2_change_flag = 1;
00008c  2101              MOVS     r1,#1
00008e  7071              STRB     r1,[r6,#1]
;;;121    		gpio_key_status.key2_count = 0;
;;;122    		gpio_key_status.key_status_back = (gpio_key_status.key_status_back & 0xfd) | (PC6<<1);
000090  21fd              MOVS     r1,#0xfd
000092  4008              ANDS     r0,r0,r1
000094  60e5              STR      r5,[r4,#0xc]  ; gpio_key_status
000096  69b9              LDR      r1,[r7,#0x18]
000098  0049              LSLS     r1,r1,#1
00009a  4308              ORRS     r0,r0,r1
00009c  7220              STRB     r0,[r4,#8]
                  |L4.158|
;;;123    	}
;;;124    	
;;;125     	gpio_key_status.key_status=GPIO_KEY_STATUS_NONE;		
00009e  7025              STRB     r5,[r4,#0]
;;;126    }
0000a0  bdf8              POP      {r3-r7,pc}
;;;127    /*
                          ENDP

0000a2  0000              DCW      0x0000
                  |L4.164|
                          DCD      ||.bss||
                  |L4.168|
                          DCD      0x50004280
                  |L4.172|
                          DCD      ||.data||
                  |L4.176|
0000b0  4750494f          DCB      "GPIO_KEY_POWER_UP\n",0
0000b4  5f4b4559
0000b8  5f504f57
0000bc  45525f55
0000c0  500a00  
0000c3  00                DCB      0
                  |L4.196|
0000c4  4750494f          DCB      "GPIO_KEY_POWER_DOWN\n",0
0000c8  5f4b4559
0000cc  5f504f57
0000d0  45525f44
0000d4  4f574e0a
0000d8  00      
0000d9  00                DCB      0
0000da  00                DCB      0
0000db  00                DCB      0
                  |L4.220|
0000dc  4750494f          DCB      "GPIO_KEY_MODE_UP\n",0
0000e0  5f4b4559
0000e4  5f4d4f44
0000e8  455f5550
0000ec  0a00    
0000ee  00                DCB      0
0000ef  00                DCB      0
                  |L4.240|
0000f0  4750494f          DCB      "GPIO_KEY_MODE_DOWN\n",0
0000f4  5f4b4559
0000f8  5f4d4f44
0000fc  455f444f
000100  574e0a00

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  gpio_key_status
                          %        16

                          AREA ||.data||, DATA, ALIGN=0

                  gpio_key1_change_flag
000000  00                DCB      0x00
                  gpio_key2_change_flag
000001  00                DCB      0x00
                  gpio_key1_value_count
000002  00                DCB      0x00
                  gpio_key2_value_count
000003  00                DCB      0x00
                  gpio_key1_value_flag
000004  00                DCB      0x00
                  gpio_key2_value_flag
000005  00                DCB      0x00
                  gpio_key_value
000006  00                DCB      0x00

;*** Start embedded assembler ***

#line 1 "..\\src\\driver\\drv_ gpio_key.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___15_drv__gpio_key_c_b758270a____REV16|
#line 388 "..\\lib\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___15_drv__gpio_key_c_b758270a____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___15_drv__gpio_key_c_b758270a____REVSH|
#line 402
|__asm___15_drv__gpio_key_c_b758270a____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
