; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\srv_key.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\srv_key.d --cpu=Cortex-M0 --apcs=interwork --diag_suppress=9931 -I..\lib\CMSIS\Include -I..\lib\Device\Nuvoton\NUC029xGE\Include -I..\lib\StdDriver\inc -I..\src\core\include -I..\src\driver\include -I..\src\io\include -I..\src\global -I..\src\server\include -I..\src\driver\audio -D__UVISION_VERSION=522 --omf_browse=.\obj\srv_key.crf ..\src\server\key\srv_key.c]
                          THUMB

                          AREA ||i.srv_key_eq_indoor_switch_handler||, CODE, READONLY, ALIGN=1

                  srv_key_eq_indoor_switch_handler PROC
;;;253    
;;;254     void srv_key_eq_indoor_switch_handler(void)
000000  b510              PUSH     {r4,lr}
;;;255    {
;;;256    	Core_Msg_Send(MSG_MCU1_SYS_STATE_IND, 0xc1,0x00,0x00); //indoor
000002  2300              MOVS     r3,#0
000004  461a              MOV      r2,r3
000006  21c1              MOVS     r1,#0xc1
000008  2002              MOVS     r0,#2
00000a  f7fffffe          BL       Core_Msg_Send
;;;257    }
00000e  bd10              POP      {r4,pc}
;;;258    
                          ENDP


                          AREA ||i.srv_key_eq_outdoor_switch_handler||, CODE, READONLY, ALIGN=1

                  srv_key_eq_outdoor_switch_handler PROC
;;;258    
;;;259    void srv_key_eq_outdoor_switch_handler(void)
000000  b510              PUSH     {r4,lr}
;;;260    {
;;;261    	Core_Msg_Send(MSG_MCU1_SYS_STATE_IND, 0xc2,0x00,0x00); //outdoor
000002  2300              MOVS     r3,#0
000004  461a              MOV      r2,r3
000006  21c2              MOVS     r1,#0xc2
000008  2002              MOVS     r0,#2
00000a  f7fffffe          BL       Core_Msg_Send
;;;262    }
00000e  bd10              POP      {r4,pc}
;;;263    
                          ENDP


                          AREA ||i.srv_key_handler||, CODE, READONLY, ALIGN=2

                  srv_key_handler PROC
;;;269    
;;;270    void srv_key_handler(void)
000000  b510              PUSH     {r4,lr}
;;;271    {	
;;;272    	//static uint8_t i = 0;
;;;273    	switch(GetIrKey())
000002  f7fffffe          BL       GetIrKey
;;;274    	{
;;;275    		case IR_KEY_POWER:
;;;276    			
;;;277    		Global_datas.key_led_blink = 1;
000006  381a              SUBS     r0,r0,#0x1a
000008  2201              MOVS     r2,#1
00000a  4928              LDR      r1,|L3.172|
00000c  0003              MOVS     r3,r0                 ;273
00000e  f7fffffe          BL       __ARM_common_switch8
000012  110a              DCB      0x11,0x0a
000014  12161e1e          DCB      0x12,0x16,0x1e,0x1e
000018  22222a12          DCB      0x22,0x22,0x2a,0x12
00001c  26122e12          DCB      0x26,0x12,0x2e,0x12
000020  32363a42          DCB      0x32,0x36,0x3a,0x42
000024  1200              DCB      0x12,0x00
000026  730a              STRB     r2,[r1,#0xc]
;;;278    		if(Global_datas.g_mode_status == POWER_IDLE_MODE)
000028  7948              LDRB     r0,[r1,#5]  ; Global_datas
00002a  280e              CMP      r0,#0xe
00002c  d004              BEQ      |L3.56|
;;;279    		{
;;;280    			SYS_Status();
;;;281    		}
;;;282    		
;;;283    		else
;;;284    		{
;;;285    			PowerOff();
00002e  f7fffffe          BL       PowerOff
;;;286    			SysIdle();
000032  f7fffffe          BL       SysIdle
;;;287    		}
;;;288    		break;
;;;289    
;;;290    
;;;291    		case IR_KEY_POWER_CP:
;;;292    		{
;;;293    			//PowerDown_deepsleep();
;;;294    		}
;;;295    		break;
;;;296    
;;;297    		case IR_KEY_MODE:
;;;298    			
;;;299    			Global_datas.key_led_blink = 1;
;;;300    			Global_datas.mode_switching = 1;
;;;301    			drv_5825_mute_pin_set(0);  // mute
;;;302    			srv_key_mode_handler();
;;;303    		break;
;;;304    		case IR_KEY_VOLUME_UP:
;;;305    		case IR_KEY_VOLUME_UP_CP:
;;;306    			Global_datas.key_led_blink = 1;
;;;307    			srv_key_volume_up_handler();
;;;308    		break;
;;;309    		case IR_KEY_VOLUME_DOWN:
;;;310    		case IR_KEY_VOLUME_DOWN_CP:
;;;311    			
;;;312    			Global_datas.key_led_blink = 1;
;;;313    			srv_key_volume_down_handler();
;;;314    		break;
;;;315    		case IR_KEY_NEXT_SONG:
;;;316    			Global_datas.key_led_blink = 1;
;;;317    			
;;;318    			srv_key_next_song_handler();
;;;319    		break;
;;;320    		case IR_KEY_PREV_SONG:
;;;321    			Global_datas.key_led_blink = 1;
;;;322    			
;;;323    			srv_key_prev_song_handler();
;;;324    		break;
;;;325    
;;;326    		case IR_KEY_PLAY_PAUSE:
;;;327    			Global_datas.key_led_blink = 1;
;;;328    
;;;329    		/*	if(i == 0)
;;;330    			{
;;;331    				i = 1;
;;;332    				drv_5825_mute_pin_set(1);  // unmute
;;;333    			}
;;;334    			else 
;;;335    			{
;;;336    				i = 0;
;;;337    				drv_5825_mute_pin_set(0);  // mute
;;;338    			}*/
;;;339    			srv_key_play_pause_handler();
;;;340    		break;
;;;341    
;;;342    
;;;343    		
;;;344    		case IR_KEY_PREV_STATION:
;;;345    			
;;;346    			Global_datas.key_led_blink = 1;
;;;347    			srv_key_prev_station_handler();
;;;348    		break;
;;;349    		case IR_KEY_NEXT_STATION:
;;;350    			
;;;351    			Global_datas.key_led_blink = 1;
;;;352    			srv_key_next_station_handler();
;;;353    		break;
;;;354    		case IR_KEY_EQ_INDOOR:
;;;355    			
;;;356    			Global_datas.key_led_blink = 1;
;;;357    
;;;358    			if(Global_datas.eq_mode != EQ_MODE_INDOOR)
;;;359    			{
;;;360    				Global_datas.eq_mode = EQ_MODE_INDOOR;
;;;361    				srv_key_eq_indoor_switch_handler();
;;;362    				Drv_audio_channel_switch();
;;;363    			}
;;;364    		break;
;;;365    		
;;;366    		case IR_KEY_EQ_OUTDOOR:
;;;367    			
;;;368    			Global_datas.key_led_blink = 1;
;;;369    
;;;370    			if(Global_datas.eq_mode != EQ_MODE_OUTDOOR)
;;;371    			{
;;;372    				Global_datas.eq_mode = EQ_MODE_OUTDOOR;
;;;373    				srv_key_eq_outdoor_switch_handler();
;;;374    				Drv_audio_channel_switch();
;;;375    			}		
;;;376    			
;;;377    		break;
;;;378    
;;;379    		
;;;380    		//case IR_KEY_NET_SET:
;;;381    			
;;;382    		//	Global_datas.key_led_blink = 1;
;;;383    		//	srv_key_net_config_handler();
;;;384    		//break;
;;;385    		
;;;386    		default:
;;;387    		break;
;;;388    	}
;;;389    }
000036  bd10              POP      {r4,pc}
                  |L3.56|
000038  f7fffffe          BL       SYS_Status
00003c  bd10              POP      {r4,pc}
00003e  730a              STRB     r2,[r1,#0xc]          ;299
000040  740a              STRB     r2,[r1,#0x10]         ;300
000042  2000              MOVS     r0,#0                 ;301
000044  f7fffffe          BL       drv_5825_mute_pin_set
000048  f7fffffe          BL       srv_key_mode_handler
00004c  bd10              POP      {r4,pc}
00004e  730a              STRB     r2,[r1,#0xc]          ;306
000050  f7fffffe          BL       srv_key_volume_up_handler
000054  bd10              POP      {r4,pc}
000056  730a              STRB     r2,[r1,#0xc]          ;312
000058  f7fffffe          BL       srv_key_volume_down_handler
00005c  bd10              POP      {r4,pc}
00005e  730a              STRB     r2,[r1,#0xc]          ;316
000060  f7fffffe          BL       srv_key_next_song_handler
000064  bd10              POP      {r4,pc}
000066  730a              STRB     r2,[r1,#0xc]          ;321
000068  f7fffffe          BL       srv_key_prev_song_handler
00006c  bd10              POP      {r4,pc}
00006e  730a              STRB     r2,[r1,#0xc]          ;327
000070  f7fffffe          BL       srv_key_play_pause_handler
000074  bd10              POP      {r4,pc}
000076  730a              STRB     r2,[r1,#0xc]          ;346
000078  f7fffffe          BL       srv_key_prev_station_handler
00007c  bd10              POP      {r4,pc}
00007e  730a              STRB     r2,[r1,#0xc]          ;351
000080  f7fffffe          BL       srv_key_next_station_handler
                  |L3.132|
000084  bd10              POP      {r4,pc}
000086  730a              STRB     r2,[r1,#0xc]          ;356
000088  7b88              LDRB     r0,[r1,#0xe]          ;358  ; Global_datas
00008a  2801              CMP      r0,#1                 ;358
00008c  d0fa              BEQ      |L3.132|
00008e  738a              STRB     r2,[r1,#0xe]          ;360
000090  f7fffffe          BL       srv_key_eq_indoor_switch_handler
000094  e007              B        |L3.166|
000096  730a              STRB     r2,[r1,#0xc]          ;368
000098  7b88              LDRB     r0,[r1,#0xe]          ;370  ; Global_datas
00009a  2802              CMP      r0,#2                 ;370
00009c  d0f2              BEQ      |L3.132|
00009e  2002              MOVS     r0,#2                 ;372
0000a0  7388              STRB     r0,[r1,#0xe]          ;372
0000a2  f7fffffe          BL       srv_key_eq_outdoor_switch_handler
                  |L3.166|
0000a6  f7fffffe          BL       Drv_audio_channel_switch
0000aa  bd10              POP      {r4,pc}
;;;390    
                          ENDP

                  |L3.172|
                          DCD      Global_datas+0x20

                          AREA ||i.srv_key_mode_handler||, CODE, READONLY, ALIGN=2

                  srv_key_mode_handler PROC
;;;23     
;;;24     void srv_key_mode_handler(void)
000000  b570              PUSH     {r4-r6,lr}
;;;25     {
;;;26     
;;;27     switch(Global_datas.state)
000002  4c21              LDR      r4,|L4.136|
000004  7d20              LDRB     r0,[r4,#0x14]  ; Global_datas
000006  2804              CMP      r0,#4
000008  d024              BEQ      |L4.84|
00000a  2805              CMP      r0,#5
00000c  d02c              BEQ      |L4.104|
00000e  2504              MOVS     r5,#4
000010  2806              CMP      r0,#6
000012  d013              BEQ      |L4.60|
000014  2807              CMP      r0,#7
000016  d110              BNE      |L4.58|
;;;28     {
;;;29     	case SYS_PLAY_STATE_AUX:
;;;30     
;;;31     		if(Global_datas.SubBoard.subboard_online) // if subboard online ,turn on fm
000018  7da0              LDRB     r0,[r4,#0x16]  ; Global_datas
00001a  2800              CMP      r0,#0
00001c  d00e              BEQ      |L4.60|
;;;32     		{
;;;33     			
;;;34     			Global_datas.state = SYS_PLAY_STATE_FM;
00001e  2006              MOVS     r0,#6
000020  7520              STRB     r0,[r4,#0x14]
;;;35     			drv_Cmd_Send2NCU031(0x70, 0x13,0x00);// change to fm mode	
000022  2200              MOVS     r2,#0
000024  2113              MOVS     r1,#0x13
000026  2070              MOVS     r0,#0x70
000028  f7fffffe          BL       drv_Cmd_Send2NCU031
;;;36     			Cmd_Send2FourG(0x03 ,0x18,0x00);
00002c  2200              MOVS     r2,#0
00002e  2118              MOVS     r1,#0x18
000030  2003              MOVS     r0,#3
000032  f7fffffe          BL       Cmd_Send2FourG
;;;37     			drv_audio_FM_Channel(); 
000036  f7fffffe          BL       drv_audio_FM_Channel
                  |L4.58|
;;;38     		}
;;;39     		else
;;;40     		{
;;;41     			
;;;42     			Cmd_Send2FourG(0x03 ,0x15,0x00);
;;;43     			Global_datas.state = SYS_PLAY_STATE_MW_RADIO;
;;;44     			drv_Cmd_Send2NCU031(0x70, 0x11,0x00);// change to wifi mode	
;;;45     			drv_audio_4G_Channel(); 
;;;46     		}
;;;47     
;;;48     
;;;49     	break;
;;;50     	
;;;51     
;;;52     	case SYS_PLAY_STATE_MW_RADIO:
;;;53     		
;;;54     		Cmd_Send2FourG(0x03 ,0x16,0x00);
;;;55     		Global_datas.state = SYS_PLAY_STATE_BT;
;;;56     		drv_audio_4G_Channel();   // BT and 4G wifi use the same channel
;;;57     		
;;;58     	break;
;;;59     	
;;;60     	case SYS_PLAY_STATE_BT:
;;;61     
;;;62     
;;;63     		Cmd_Send2FourG(0x03 ,0x17,0x00);
;;;64     		Global_datas.state = SYS_PLAY_STATE_AUX;
;;;65     		drv_Cmd_Send2NCU031(0x70, 0x12,0x00);// change to aux mode
;;;66     		drv_audio_AuxIn_Channel(); 
;;;67     		
;;;68     	break;
;;;69     	
;;;70     	case SYS_PLAY_STATE_FM:
;;;71     		
;;;72     		Cmd_Send2FourG(0x03 ,0x15,0x00);
;;;73     		Global_datas.state = SYS_PLAY_STATE_MW_RADIO;
;;;74     		drv_Cmd_Send2NCU031(0x70, 0x11,0x00);// change to wifi/4g mode
;;;75     		drv_audio_4G_Channel(); 
;;;76     	break;
;;;77     	
;;;78     	default:
;;;79     	break;
;;;80         }
;;;81     }
00003a  bd70              POP      {r4-r6,pc}
                  |L4.60|
00003c  2200              MOVS     r2,#0                 ;42
00003e  2115              MOVS     r1,#0x15              ;42
000040  2003              MOVS     r0,#3                 ;42
000042  f7fffffe          BL       Cmd_Send2FourG
000046  7525              STRB     r5,[r4,#0x14]         ;43
000048  2200              MOVS     r2,#0                 ;44
00004a  2111              MOVS     r1,#0x11              ;44
00004c  2070              MOVS     r0,#0x70              ;44
00004e  f7fffffe          BL       drv_Cmd_Send2NCU031
000052  e006              B        |L4.98|
                  |L4.84|
000054  2200              MOVS     r2,#0                 ;54
000056  2116              MOVS     r1,#0x16              ;54
000058  2003              MOVS     r0,#3                 ;54
00005a  f7fffffe          BL       Cmd_Send2FourG
00005e  2005              MOVS     r0,#5                 ;55
000060  7520              STRB     r0,[r4,#0x14]         ;55
                  |L4.98|
000062  f7fffffe          BL       drv_audio_4G_Channel
000066  bd70              POP      {r4-r6,pc}
                  |L4.104|
000068  2200              MOVS     r2,#0                 ;63
00006a  2117              MOVS     r1,#0x17              ;63
00006c  2003              MOVS     r0,#3                 ;63
00006e  f7fffffe          BL       Cmd_Send2FourG
000072  2007              MOVS     r0,#7                 ;64
000074  7520              STRB     r0,[r4,#0x14]         ;64
000076  2200              MOVS     r2,#0                 ;65
000078  2112              MOVS     r1,#0x12              ;65
00007a  2070              MOVS     r0,#0x70              ;65
00007c  f7fffffe          BL       drv_Cmd_Send2NCU031
000080  f7fffffe          BL       drv_audio_AuxIn_Channel
000084  bd70              POP      {r4-r6,pc}
;;;82     
                          ENDP

000086  0000              DCW      0x0000
                  |L4.136|
                          DCD      Global_datas+0x20

                          AREA ||i.srv_key_mode_switch_to||, CODE, READONLY, ALIGN=2

                  srv_key_mode_switch_to PROC
;;;83     
;;;84     void srv_key_mode_switch_to(uint8_t mode)
000000  b5f8              PUSH     {r3-r7,lr}
;;;85     {
;;;86     	if(Global_datas.state == mode)
000002  4c22              LDR      r4,|L5.140|
000004  7d21              LDRB     r1,[r4,#0x14]  ; Global_datas
000006  4281              CMP      r1,r0
000008  d016              BEQ      |L5.56|
00000a  2704              MOVS     r7,#4                 ;85
00000c  2505              MOVS     r5,#5                 ;85
;;;87     	{
;;;88     		return;
;;;89     	}
;;;90     
;;;91     	if(Global_datas.state == SYS_PLAY_STATE_AUX)
00000e  2907              CMP      r1,#7
000010  d00b              BEQ      |L5.42|
000012  2607              MOVS     r6,#7                 ;86
;;;92     	{
;;;93     		switch(mode)
;;;94     		{
;;;95     			case SYS_PLAY_STATE_BT:
;;;96     				
;;;97     			Cmd_Send2FourG(0x03 ,0x16,0x00);
;;;98     			Global_datas.state = SYS_PLAY_STATE_BT;
;;;99     			drv_audio_4G_Channel();   // BT and 4G wifi use the same channel
;;;100    
;;;101    			break;
;;;102    			
;;;103    			case SYS_PLAY_STATE_MW_RADIO:
;;;104    				
;;;105    			Cmd_Send2FourG(0x03 ,0x15,0x00);
;;;106    			Global_datas.state = SYS_PLAY_STATE_MW_RADIO;
;;;107    			drv_Cmd_Send2NCU031(0x70, 0x11,0x00);// change to wifi/4g mode
;;;108    			drv_audio_4G_Channel(); 
;;;109    
;;;110    			break;		
;;;111    
;;;112    			case SYS_PLAY_STATE_FM:
;;;113    
;;;114    			break;	
;;;115    
;;;116    			default:break;
;;;117    		}
;;;118    	}
;;;119    
;;;120    	else if(Global_datas.state == SYS_PLAY_STATE_BT)
000014  2905              CMP      r1,#5
000016  d010              BEQ      |L5.58|
;;;121    	{
;;;122    		switch(mode)
;;;123    		{
;;;124    			case SYS_PLAY_STATE_AUX:
;;;125    				
;;;126    			Cmd_Send2FourG(0x03 ,0x17,0x00);
;;;127    			Global_datas.state = SYS_PLAY_STATE_AUX;
;;;128    			drv_Cmd_Send2NCU031(0x70, 0x12,0x00);// change to aux mode
;;;129    			drv_audio_AuxIn_Channel();
;;;130    
;;;131    			break;
;;;132    			
;;;133    			case SYS_PLAY_STATE_MW_RADIO:
;;;134    				
;;;135    			Cmd_Send2FourG(0x03 ,0x15,0x00);
;;;136    			Global_datas.state = SYS_PLAY_STATE_MW_RADIO;
;;;137    			drv_Cmd_Send2NCU031(0x70, 0x11,0x00);// change to wifi/4g mode
;;;138    			drv_audio_4G_Channel(); 
;;;139    
;;;140    			break;		
;;;141    
;;;142    			case SYS_PLAY_STATE_FM:
;;;143    
;;;144    			break;	
;;;145    
;;;146    			default:break;
;;;147    		}
;;;148    	}
;;;149    
;;;150    	else if(Global_datas.state == SYS_PLAY_STATE_MW_RADIO)
000018  2904              CMP      r1,#4
00001a  d02e              BEQ      |L5.122|
;;;151    	{
;;;152    		switch(mode)
;;;153    		{
;;;154    			case SYS_PLAY_STATE_AUX:
;;;155    				
;;;156    			Cmd_Send2FourG(0x03 ,0x17,0x00);
;;;157    			Global_datas.state = SYS_PLAY_STATE_AUX;
;;;158    			drv_Cmd_Send2NCU031(0x70, 0x12,0x00);// change to aux mode
;;;159    			drv_audio_AuxIn_Channel();
;;;160    
;;;161    			break;
;;;162    			
;;;163    			case SYS_PLAY_STATE_BT:
;;;164    				
;;;165    			Cmd_Send2FourG(0x03 ,0x16,0x00);
;;;166    			Global_datas.state = SYS_PLAY_STATE_BT;
;;;167    			drv_audio_4G_Channel();   // BT and 4G wifi use the same channel
;;;168    
;;;169    
;;;170    			break;		
;;;171    
;;;172    			case SYS_PLAY_STATE_FM:
;;;173    
;;;174    			break;	
;;;175    
;;;176    			default:break;
;;;177    		}
;;;178    	}
;;;179    	else if(Global_datas.state == SYS_PLAY_STATE_FM)
00001c  2906              CMP      r1,#6
00001e  d10b              BNE      |L5.56|
;;;180    	{
;;;181    		switch(mode)
000020  2804              CMP      r0,#4
000022  d009              BEQ      |L5.56|
000024  2805              CMP      r0,#5
000026  d10c              BNE      |L5.66|
000028  e029              B        |L5.126|
                  |L5.42|
00002a  2804              CMP      r0,#4                 ;93
00002c  d019              BEQ      |L5.98|
00002e  2805              CMP      r0,#5                 ;93
000030  d102              BNE      |L5.56|
000032  e024              B        |L5.126|
                  |L5.52|
000034  f7fffffe          BL       drv_audio_4G_Channel
                  |L5.56|
;;;182    		{
;;;183    			case SYS_PLAY_STATE_AUX:
;;;184    				
;;;185    			Cmd_Send2FourG(0x03 ,0x17,0x00);
;;;186    			Global_datas.state = SYS_PLAY_STATE_AUX;
;;;187    			drv_Cmd_Send2NCU031(0x70, 0x12,0x00);// change to aux mode
;;;188    			drv_audio_AuxIn_Channel();
;;;189    
;;;190    			break;
;;;191    			
;;;192    			case SYS_PLAY_STATE_BT:
;;;193    				
;;;194    			Cmd_Send2FourG(0x03 ,0x16,0x00);
;;;195    			Global_datas.state = SYS_PLAY_STATE_BT;
;;;196    			drv_audio_4G_Channel();   // BT and 4G wifi use the same channel
;;;197    
;;;198    
;;;199    			break;		
;;;200    
;;;201    			case SYS_PLAY_STATE_MW_RADIO:
;;;202    
;;;203    			break;	
;;;204    
;;;205    			default:break;
;;;206    		}
;;;207    	}
;;;208    
;;;209    }
000038  bdf8              POP      {r3-r7,pc}
                  |L5.58|
00003a  2804              CMP      r0,#4                 ;122
00003c  d011              BEQ      |L5.98|
                  |L5.62|
00003e  2806              CMP      r0,#6                 ;122
000040  d0fa              BEQ      |L5.56|
                  |L5.66|
000042  2807              CMP      r0,#7                 ;122
000044  d1f8              BNE      |L5.56|
000046  2200              MOVS     r2,#0                 ;126
000048  2117              MOVS     r1,#0x17              ;126
00004a  2003              MOVS     r0,#3                 ;126
00004c  f7fffffe          BL       Cmd_Send2FourG
000050  7526              STRB     r6,[r4,#0x14]         ;127
000052  2200              MOVS     r2,#0                 ;128
000054  2112              MOVS     r1,#0x12              ;128
000056  2070              MOVS     r0,#0x70              ;128
000058  f7fffffe          BL       drv_Cmd_Send2NCU031
00005c  f7fffffe          BL       drv_audio_AuxIn_Channel
000060  bdf8              POP      {r3-r7,pc}
                  |L5.98|
000062  2200              MOVS     r2,#0                 ;135
000064  2115              MOVS     r1,#0x15              ;135
000066  2003              MOVS     r0,#3                 ;135
000068  f7fffffe          BL       Cmd_Send2FourG
00006c  7527              STRB     r7,[r4,#0x14]         ;136
00006e  2200              MOVS     r2,#0                 ;137
000070  2111              MOVS     r1,#0x11              ;137
000072  2070              MOVS     r0,#0x70              ;137
000074  f7fffffe          BL       drv_Cmd_Send2NCU031
000078  e7dc              B        |L5.52|
                  |L5.122|
00007a  2805              CMP      r0,#5                 ;152
00007c  d1df              BNE      |L5.62|
                  |L5.126|
00007e  2200              MOVS     r2,#0                 ;194
000080  2116              MOVS     r1,#0x16              ;194
000082  2003              MOVS     r0,#3                 ;194
000084  f7fffffe          BL       Cmd_Send2FourG
000088  7525              STRB     r5,[r4,#0x14]         ;195
00008a  e7d3              B        |L5.52|
;;;210    
                          ENDP

                  |L5.140|
                          DCD      Global_datas+0x20

                          AREA ||i.srv_key_net_config_handler||, CODE, READONLY, ALIGN=1

                  srv_key_net_config_handler PROC
;;;264    
;;;265    void srv_key_net_config_handler(void)
000000  b510              PUSH     {r4,lr}
;;;266    {
;;;267    	Core_Msg_Send(MSG_MCU1_SYS_STATE_IND, 0x03,0x21,0x00); //net config
000002  2300              MOVS     r3,#0
000004  2221              MOVS     r2,#0x21
000006  2103              MOVS     r1,#3
000008  2002              MOVS     r0,#2
00000a  f7fffffe          BL       Core_Msg_Send
;;;268    }
00000e  bd10              POP      {r4,pc}
;;;269    
                          ENDP


                          AREA ||i.srv_key_next_song_handler||, CODE, READONLY, ALIGN=1

                  srv_key_next_song_handler PROC
;;;221    
;;;222    void srv_key_next_song_handler(void)
000000  b510              PUSH     {r4,lr}
;;;223    {
;;;224    	Core_Msg_Send(MSG_MCU1_SYS_STATE_IND, 0x03,0x0d,0x00); //
000002  2300              MOVS     r3,#0
000004  220d              MOVS     r2,#0xd
000006  2103              MOVS     r1,#3
000008  2002              MOVS     r0,#2
00000a  f7fffffe          BL       Core_Msg_Send
;;;225    	drv_Cmd_Send2NCU031(0x70, 0x19,0x00);
00000e  2200              MOVS     r2,#0
000010  2119              MOVS     r1,#0x19
000012  2070              MOVS     r0,#0x70
000014  f7fffffe          BL       drv_Cmd_Send2NCU031
;;;226    }
000018  bd10              POP      {r4,pc}
;;;227    
                          ENDP


                          AREA ||i.srv_key_next_station_handler||, CODE, READONLY, ALIGN=1

                  srv_key_next_station_handler PROC
;;;247    
;;;248    void srv_key_next_station_handler(void)
000000  b510              PUSH     {r4,lr}
;;;249    {
;;;250    	Core_Msg_Send(MSG_MCU1_SYS_STATE_IND, 0x03,0x31,0x00); //next piece
000002  2300              MOVS     r3,#0
000004  2231              MOVS     r2,#0x31
000006  2103              MOVS     r1,#3
000008  2002              MOVS     r0,#2
00000a  f7fffffe          BL       Core_Msg_Send
;;;251    	drv_Cmd_Send2NCU031(0x70, 0x1b,0x00);
00000e  2200              MOVS     r2,#0
000010  211b              MOVS     r1,#0x1b
000012  2070              MOVS     r0,#0x70
000014  f7fffffe          BL       drv_Cmd_Send2NCU031
;;;252    }
000018  bd10              POP      {r4,pc}
;;;253    
                          ENDP


                          AREA ||i.srv_key_play_pause_handler||, CODE, READONLY, ALIGN=1

                  srv_key_play_pause_handler PROC
;;;234    
;;;235    void srv_key_play_pause_handler(void)
000000  b510              PUSH     {r4,lr}
;;;236    {
;;;237    	Core_Msg_Send(MSG_MCU1_SYS_STATE_IND, 0x03,0x56,0x00); //
000002  2300              MOVS     r3,#0
000004  2256              MOVS     r2,#0x56
000006  2103              MOVS     r1,#3
000008  2002              MOVS     r0,#2
00000a  f7fffffe          BL       Core_Msg_Send
;;;238    	drv_Cmd_Send2NCU031(0x70, 0x17,0x00);
00000e  2200              MOVS     r2,#0
000010  2117              MOVS     r1,#0x17
000012  2070              MOVS     r0,#0x70
000014  f7fffffe          BL       drv_Cmd_Send2NCU031
;;;239    }
000018  bd10              POP      {r4,pc}
;;;240    
                          ENDP


                          AREA ||i.srv_key_prev_song_handler||, CODE, READONLY, ALIGN=1

                  srv_key_prev_song_handler PROC
;;;227    
;;;228    void srv_key_prev_song_handler(void)
000000  b510              PUSH     {r4,lr}
;;;229    {
;;;230    	Core_Msg_Send(MSG_MCU1_SYS_STATE_IND, 0x03,0x0e,0x00); //
000002  2300              MOVS     r3,#0
000004  220e              MOVS     r2,#0xe
000006  2103              MOVS     r1,#3
000008  2002              MOVS     r0,#2
00000a  f7fffffe          BL       Core_Msg_Send
;;;231    	drv_Cmd_Send2NCU031(0x70, 0x18,0x00);
00000e  2200              MOVS     r2,#0
000010  2118              MOVS     r1,#0x18
000012  2070              MOVS     r0,#0x70
000014  f7fffffe          BL       drv_Cmd_Send2NCU031
;;;232    }
000018  bd10              POP      {r4,pc}
;;;233    
                          ENDP


                          AREA ||i.srv_key_prev_station_handler||, CODE, READONLY, ALIGN=1

                  srv_key_prev_station_handler PROC
;;;241    
;;;242    void srv_key_prev_station_handler(void)
000000  b510              PUSH     {r4,lr}
;;;243    {
;;;244    	Core_Msg_Send(MSG_MCU1_SYS_STATE_IND, 0x03,0x32,0x00); //last piece
000002  2300              MOVS     r3,#0
000004  2232              MOVS     r2,#0x32
000006  2103              MOVS     r1,#3
000008  2002              MOVS     r0,#2
00000a  f7fffffe          BL       Core_Msg_Send
;;;245    	drv_Cmd_Send2NCU031(0x70, 0x1a,0x00);
00000e  2200              MOVS     r2,#0
000010  211a              MOVS     r1,#0x1a
000012  2070              MOVS     r0,#0x70
000014  f7fffffe          BL       drv_Cmd_Send2NCU031
;;;246    }
000018  bd10              POP      {r4,pc}
;;;247    
                          ENDP


                          AREA ||i.srv_key_volume_down_handler||, CODE, READONLY, ALIGN=1

                  srv_key_volume_down_handler PROC
;;;216    
;;;217    void srv_key_volume_down_handler(void)
000000  b510              PUSH     {r4,lr}
;;;218    {
;;;219    	Core_Msg_Send(MSG_MCU1_SYS_STATE_IND, 0x03,0x03,0x00); //vol-
000002  2203              MOVS     r2,#3
000004  2300              MOVS     r3,#0
000006  4611              MOV      r1,r2
000008  2002              MOVS     r0,#2
00000a  f7fffffe          BL       Core_Msg_Send
;;;220    }
00000e  bd10              POP      {r4,pc}
;;;221    
                          ENDP


                          AREA ||i.srv_key_volume_up_handler||, CODE, READONLY, ALIGN=1

                  srv_key_volume_up_handler PROC
;;;211    
;;;212    void srv_key_volume_up_handler(void)
000000  b510              PUSH     {r4,lr}
;;;213    {
;;;214    	Core_Msg_Send(MSG_MCU1_SYS_STATE_IND, 0x03,0x02,0x00); //vol+
000002  2202              MOVS     r2,#2
000004  2300              MOVS     r3,#0
000006  2103              MOVS     r1,#3
000008  4610              MOV      r0,r2
00000a  f7fffffe          BL       Core_Msg_Send
;;;215    }
00000e  bd10              POP      {r4,pc}
;;;216    
                          ENDP


                          AREA ||i.__ARM_common_switch8||, COMGROUP=__ARM_common_switch8, CODE, READONLY, ALIGN=1

                  __ARM_common_switch8 PROC
000000  b430              PUSH     {r4,r5}
000002  4674              MOV      r4,lr
000004  1e64              SUBS     r4,r4,#1
000006  7825              LDRB     r5,[r4,#0]
000008  1c64              ADDS     r4,r4,#1
00000a  42ab              CMP      r3,r5
00000c  d200              BCS      |L76.16|
00000e  461d              MOV      r5,r3
                  |L76.16|
000010  5d63              LDRB     r3,[r4,r5]
000012  005b              LSLS     r3,r3,#1
000014  18e3              ADDS     r3,r4,r3
000016  bc30              POP      {r4,r5}
000018  4718              BX       r3
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\src\\server\\key\\srv_key.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___9_srv_key_c_69717a1a____REV16|
#line 388 "..\\lib\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___9_srv_key_c_69717a1a____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___9_srv_key_c_69717a1a____REVSH|
#line 402
|__asm___9_srv_key_c_69717a1a____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
