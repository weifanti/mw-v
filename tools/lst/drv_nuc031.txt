; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\drv_nuc031.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\drv_nuc031.d --cpu=Cortex-M0 --apcs=interwork --diag_suppress=9931 -I..\lib\CMSIS\Include -I..\lib\Device\Nuvoton\NUC029xGE\Include -I..\lib\StdDriver\inc -I..\src\core\include -I..\src\driver\include -I..\src\io\include -I..\src\global -I..\src\server\include -I..\src\driver\audio -D__UVISION_VERSION=522 --omf_browse=.\obj\drv_nuc031.crf ..\src\driver\drv_nuc031.c]
                          THUMB

                          AREA ||i.drv_Cmd_Send2NCU031||, CODE, READONLY, ALIGN=2

                  drv_Cmd_Send2NCU031 PROC
;;;15     
;;;16     void drv_Cmd_Send2NCU031(uint8_t cmd, uint8_t param0, uint8_t param1)
000000  b5f8              PUSH     {r3-r7,lr}
;;;17     {
000002  4607              MOV      r7,r0
;;;18     	uint8_t checksum;
;;;19     
;;;20     	//printf("drv_Cmd_Send2NCU031:cmd = %x,param0 = %x, param1 = %x \n",cmd,param0,param1);
;;;21     	UUART_WRITE(UUART0,0xff);
000004  4c1b              LDR      r4,|L1.116|
000006  20ff              MOVS     r0,#0xff
000008  4615              MOV      r5,r2                 ;17
00000a  460e              MOV      r6,r1                 ;17
00000c  6320              STR      r0,[r4,#0x30]
;;;22     	TIMER_Delay(TIMER0, 1000);
00000e  217d              MOVS     r1,#0x7d
000010  00c9              LSLS     r1,r1,#3
000012  4819              LDR      r0,|L1.120|
000014  f7fffffe          BL       TIMER_Delay
;;;23     	UUART_WRITE(UUART0,0x55);
000018  2055              MOVS     r0,#0x55
00001a  6320              STR      r0,[r4,#0x30]
;;;24     	TIMER_Delay(TIMER0, 1000);
00001c  217d              MOVS     r1,#0x7d
00001e  00c9              LSLS     r1,r1,#3
000020  4815              LDR      r0,|L1.120|
000022  f7fffffe          BL       TIMER_Delay
;;;25     	UUART_WRITE(UUART0,0x03);
000026  2003              MOVS     r0,#3
000028  6320              STR      r0,[r4,#0x30]
;;;26     	TIMER_Delay(TIMER0, 1000);
00002a  217d              MOVS     r1,#0x7d
00002c  00c9              LSLS     r1,r1,#3
00002e  4812              LDR      r0,|L1.120|
000030  f7fffffe          BL       TIMER_Delay
;;;27     	UUART_WRITE(UUART0,0x80);
000034  2080              MOVS     r0,#0x80
000036  6320              STR      r0,[r4,#0x30]
;;;28     	TIMER_Delay(TIMER0, 1000);
000038  217d              MOVS     r1,#0x7d
00003a  00c9              LSLS     r1,r1,#3
00003c  480e              LDR      r0,|L1.120|
00003e  f7fffffe          BL       TIMER_Delay
;;;29     	UUART_WRITE(UUART0,cmd);
000042  6327              STR      r7,[r4,#0x30]
;;;30     	TIMER_Delay(TIMER0, 1000);
000044  217d              MOVS     r1,#0x7d
000046  00c9              LSLS     r1,r1,#3
000048  480b              LDR      r0,|L1.120|
00004a  f7fffffe          BL       TIMER_Delay
;;;31     	UUART_WRITE(UUART0,param0);
00004e  6326              STR      r6,[r4,#0x30]
;;;32     	TIMER_Delay(TIMER0, 1000);
000050  217d              MOVS     r1,#0x7d
000052  00c9              LSLS     r1,r1,#3
000054  4808              LDR      r0,|L1.120|
000056  f7fffffe          BL       TIMER_Delay
;;;33     	UUART_WRITE(UUART0,param1);
00005a  6325              STR      r5,[r4,#0x30]
;;;34     	TIMER_Delay(TIMER0, 1000);
00005c  217d              MOVS     r1,#0x7d
00005e  00c9              LSLS     r1,r1,#3
000060  4805              LDR      r0,|L1.120|
000062  f7fffffe          BL       TIMER_Delay
;;;35     	checksum = 0 -( 0x03 + 0x80 + cmd + param0 + param1);
000066  19b8              ADDS     r0,r7,r6
000068  1940              ADDS     r0,r0,r5
00006a  3083              ADDS     r0,r0,#0x83
00006c  4240              RSBS     r0,r0,#0
00006e  b2c0              UXTB     r0,r0
;;;36     	UUART_WRITE(UUART0,checksum);
000070  6320              STR      r0,[r4,#0x30]
;;;37     }
000072  bdf8              POP      {r3-r7,pc}
;;;38     
                          ENDP

                  |L1.116|
                          DCD      0x40070000
                  |L1.120|
                          DCD      0x40010000

                          AREA ||i.drv_SendAllstateToSubboard||, CODE, READONLY, ALIGN=2

                  drv_SendAllstateToSubboard PROC
;;;40     //Send current state to subboard
;;;41     void drv_SendAllstateToSubboard(void)
000000  b510              PUSH     {r4,lr}
;;;42     {
;;;43     	switch(Global_datas.g_mode_status)  //state mode
000002  4814              LDR      r0,|L2.84|
000004  79c1              LDRB     r1,[r0,#7]  ; Global_datas
000006  000b              MOVS     r3,r1
000008  f7fffffe          BL       __ARM_common_switch8
00000c  0f231212          DCB      0x0f,0x23,0x12,0x12
000010  12151518          DCB      0x12,0x15,0x15,0x18
000014  181e231b          DCB      0x18,0x1e,0x23,0x1b
000018  23232309          DCB      0x23,0x23,0x23,0x09
00001c  2300              DCB      0x23,0x00
;;;44     	{
;;;45     		case POWER_IDLE_MODE:
;;;46     			{
;;;47     				if(Global_datas.g_4g_initing)
00001e  7a00              LDRB     r0,[r0,#8]  ; Global_datas
000020  2800              CMP      r0,#0
000022  d002              BEQ      |L2.42|
;;;48     				{
;;;49     					drv_Cmd_Send2NCU031(0x71, 0x12,0x00);  // powering up
000024  2200              MOVS     r2,#0
000026  2112              MOVS     r1,#0x12
000028  e010              B        |L2.76|
                  |L2.42|
;;;50     				}			
;;;51     				else
;;;52     				{
;;;53     					drv_Cmd_Send2NCU031(0x71, 0x11,0x00);  // power idle mode
00002a  2200              MOVS     r2,#0
00002c  2111              MOVS     r1,#0x11
00002e  e00d              B        |L2.76|
;;;54     				}
;;;55     			}
;;;56     		break;
;;;57     
;;;58     		case WIFI_MODE:
;;;59     		case WIFI_CONNECTED_MODE:
;;;60     		case WIFI_CONNECTING_MODE:
;;;61     			{
;;;62     				drv_Cmd_Send2NCU031(0x71, 0x15,0x00);  // 
000030  2200              MOVS     r2,#0
000032  2115              MOVS     r1,#0x15
;;;63     			}
;;;64     		break;
000034  e00a              B        |L2.76|
;;;65     
;;;66     		case FOURG_MODE:
;;;67     		case FOURG_CONNECTED_MODE:
;;;68     			{
;;;69     				drv_Cmd_Send2NCU031(0x71, 0x16,0x00);  // 
000036  2200              MOVS     r2,#0
000038  2116              MOVS     r1,#0x16
;;;70     			}
;;;71     		break;
00003a  e007              B        |L2.76|
;;;72     
;;;73     		case BT_CONNECTED_MODE:
;;;74     		case BT_MODE:
;;;75     			{
;;;76     				drv_Cmd_Send2NCU031(0x71, 0x14,0x00);  //
00003c  2200              MOVS     r2,#0
00003e  2114              MOVS     r1,#0x14
;;;77     			}
;;;78     		break;				
000040  e004              B        |L2.76|
;;;79     
;;;80     		case FM_MODE:
;;;81     			{
;;;82     				drv_Cmd_Send2NCU031(0x71, 0x18,0x00);  //
000042  2200              MOVS     r2,#0
000044  2118              MOVS     r1,#0x18
;;;83     			}
;;;84     		break;	
000046  e001              B        |L2.76|
;;;85     		
;;;86     	case AUX_MODE:
;;;87     			{
;;;88     				drv_Cmd_Send2NCU031(0x71, 0x17,0x00);  //
000048  2200              MOVS     r2,#0
00004a  2117              MOVS     r1,#0x17
                  |L2.76|
00004c  2071              MOVS     r0,#0x71
00004e  f7fffffe          BL       drv_Cmd_Send2NCU031
;;;89     			}
;;;90     	break;		
;;;91     
;;;92     	default:break;
;;;93     	}
;;;94     	// eq state
;;;95     	// volume
;;;96     	// MW radio channel
;;;97     	// battery level
;;;98     	// charge state
;;;99     
;;;100    
;;;101    	
;;;102    }
000052  bd10              POP      {r4,pc}
;;;103    
                          ENDP

                  |L2.84|
                          DCD      Global_datas+0x20

                          AREA ||i.__ARM_common_switch8||, COMGROUP=__ARM_common_switch8, CODE, READONLY, ALIGN=1

                  __ARM_common_switch8 PROC
000000  b430              PUSH     {r4,r5}
000002  4674              MOV      r4,lr
000004  1e64              SUBS     r4,r4,#1
000006  7825              LDRB     r5,[r4,#0]
000008  1c64              ADDS     r4,r4,#1
00000a  42ab              CMP      r3,r5
00000c  d200              BCS      |L19.16|
00000e  461d              MOV      r5,r3
                  |L19.16|
000010  5d63              LDRB     r3,[r4,r5]
000012  005b              LSLS     r3,r3,#1
000014  18e3              ADDS     r3,r4,r3
000016  bc30              POP      {r4,r5}
000018  4718              BX       r3
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\src\\driver\\drv_nuc031.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___12_drv_nuc031_c_0f05ee0e____REV16|
#line 388 "..\\lib\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___12_drv_nuc031_c_0f05ee0e____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___12_drv_nuc031_c_0f05ee0e____REVSH|
#line 402
|__asm___12_drv_nuc031_c_0f05ee0e____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
